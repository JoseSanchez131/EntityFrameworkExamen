// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(DDBBContext))]
    [Migration("20200124162509_jose")]
    partial class jose
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAPI.Models.Apuesta", b =>
                {
                    b.Property<int>("ApuestaID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cuota");

                    b.Property<double>("Dinero_apostado");

                    b.Property<int>("EventoID");

                    b.Property<int>("MercadoID");

                    b.Property<int>("Tipo_apuesta");

                    b.Property<int>("UsuarioID");

                    b.HasKey("ApuestaID");

                    b.HasIndex("MercadoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Apuestas");

                    b.HasData(
                        new
                        {
                            ApuestaID = 1,
                            Cuota = 2.5,
                            Dinero_apostado = 50.0,
                            EventoID = 1,
                            MercadoID = 2,
                            Tipo_apuesta = 1,
                            UsuarioID = 1
                        },
                        new
                        {
                            ApuestaID = 2,
                            Cuota = 1.5,
                            Dinero_apostado = 100.0,
                            EventoID = 3,
                            MercadoID = 3,
                            Tipo_apuesta = 0,
                            UsuarioID = 2
                        },
                        new
                        {
                            ApuestaID = 3,
                            Cuota = 3.5,
                            Dinero_apostado = 150.0,
                            EventoID = 2,
                            MercadoID = 1,
                            Tipo_apuesta = 1,
                            UsuarioID = 3
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Cuenta", b =>
                {
                    b.Property<int>("CuentaID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreBanco");

                    b.Property<string>("NumeroTarjeta");

                    b.Property<int>("SaldoActual");

                    b.Property<int>("UsuarioID");

                    b.HasKey("CuentaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Cuenta");
                });

            modelBuilder.Entity("WebAPI.Models.Evento", b =>
                {
                    b.Property<int>("EventoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Goles");

                    b.Property<string>("Local");

                    b.Property<string>("Visitante");

                    b.HasKey("EventoID");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            EventoID = 1,
                            Goles = 2,
                            Local = "Madrid",
                            Visitante = "Barcelona"
                        },
                        new
                        {
                            EventoID = 2,
                            Goles = 2,
                            Local = "Valencia",
                            Visitante = "Betis"
                        },
                        new
                        {
                            EventoID = 3,
                            Goles = 3,
                            Local = "Sevilla",
                            Visitante = "Deportivo"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Mercado", b =>
                {
                    b.Property<int>("MercadoID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cuota_over");

                    b.Property<double>("Cuota_under");

                    b.Property<double>("Dinero_over");

                    b.Property<double>("Dinero_under");

                    b.Property<int>("EventoID");

                    b.Property<double>("Over_under");

                    b.HasKey("MercadoID");

                    b.HasIndex("EventoID");

                    b.ToTable("Mercados");

                    b.HasData(
                        new
                        {
                            MercadoID = 1,
                            Cuota_over = 1.4299999999999999,
                            Cuota_under = 2.8500000000000001,
                            Dinero_over = 100.0,
                            Dinero_under = 50.0,
                            EventoID = 1,
                            Over_under = 1.5
                        },
                        new
                        {
                            MercadoID = 2,
                            Cuota_over = 1.8999999999999999,
                            Cuota_under = 1.8999999999999999,
                            Dinero_over = 100.0,
                            Dinero_under = 100.0,
                            EventoID = 2,
                            Over_under = 2.5
                        },
                        new
                        {
                            MercadoID = 3,
                            Cuota_over = 2.8500000000000001,
                            Cuota_under = 1.4299999999999999,
                            Dinero_over = 50.0,
                            Dinero_under = 100.0,
                            EventoID = 3,
                            Over_under = 3.5
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<int>("Edad");

                    b.Property<string>("Email");

                    b.Property<string>("Nombre");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioID = 1,
                            Apellido = "garcia",
                            Edad = 21,
                            Email = "paco@gmail.com",
                            Nombre = "paco"
                        },
                        new
                        {
                            UsuarioID = 2,
                            Apellido = "fernandez",
                            Edad = 27,
                            Email = "pepe@gmail.com",
                            Nombre = "pepe"
                        },
                        new
                        {
                            UsuarioID = 3,
                            Apellido = "martinez",
                            Edad = 32,
                            Email = "pedro@gmail.com",
                            Nombre = "pedro"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Apuesta", b =>
                {
                    b.HasOne("WebAPI.Models.Mercado", "Mercado")
                        .WithMany("Apuestas")
                        .HasForeignKey("MercadoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAPI.Models.Usuario", "Usuario")
                        .WithMany("Apuestas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAPI.Models.Cuenta", b =>
                {
                    b.HasOne("WebAPI.Models.Usuario", "Usuario")
                        .WithMany("Cuentas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAPI.Models.Mercado", b =>
                {
                    b.HasOne("WebAPI.Models.Evento", "Evento")
                        .WithMany("Mercados")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
